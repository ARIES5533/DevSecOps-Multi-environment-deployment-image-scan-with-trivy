on:
  push:
    branches:
      - main

jobs: 
  unit_testing:
    name: Test the code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --coverage --watchAll=false

  docker_build:
    name: Build, Test & Push to DockerHub
    needs: [unit_testing]
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker build for testing
        run: |
          docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/olumoko_image:latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/olumoko_image:latest ${{ secrets.DOCKERHUB_USERNAME }}/olumoko_image:${{ github.run_number }}

      - name: docker build testing
        run: | 
          docker images
           docker run --name my-node-app -d \
            -p 3000:3000 \
            ${{ secrets.DOCKERHUB_USERNAME }}/olumoko_image:latest

      - name: Wait for container to start
        run: sleep 10  # Adjust this wait time based on your container startup time
      
      - name: Run curl command
        run: curl -v http://127.0.0.1:3000
      
      - name: Stop Docker container
        run: docker stop my-node-app

      - name: Push images to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/olumoko_image:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/olumoko_image:${{ github.run_number }}

  eks_dev_deploy:
    needs: [docker_build]
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: install kubectl CLI
        uses: azure/setup-kubectl@v3

      - uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{secret.KUBECONFIG}}
        
      - name: Fetch eks cluster details
        run: |
          kubectl version --short
          echo Aries_is_live.......................
          kubectl get nodes

      



